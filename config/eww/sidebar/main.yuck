;; ┏━┓╻╺┳┓┏━╸┏┓ ┏━┓┏━┓
;; ┗━┓┃ ┃┃┣╸ ┣┻┓┣━┫┣┳┛
;; ┗━┛╹╺┻┛┗━╸┗━┛╹ ╹╹┗╸

(defwindow sidebar
  :monitor 0
  :stacking "fg"
  :namespace "sidebar"
  :exclusive false
  :geometry (geometry
    :x "-1%"
    :y "0px"
    :width "1%"
    :anchor "left center"
  )

  (revealer
    :reveal reveal_sidebar
    :transition "slideright"
    :duration "250ms"

    (box
      :class "container"
      :orientation "v"

      (box
        :orientation "h"
        :space-evenly false

        (Calendar)

        (box
          :orientation "v"
          :space-evenly true
          :hexpand true

          (Weather)
          (Clock)
        )
      )


      (MusicPlayer)

      (box
        :orientation "h"
        :space-evenly false

        (DesktopContols)
        (SystemControls)
      )
    )
  )
)

(defwidget Calendar []
  (box
    :class "calendar card"
    :orientation "v"
    :space-evenly true
    :spacing 12

    (label
      :class "icon"
      :text ""
      :halign "center"
    )

    (label
      :class "date"
      :text {v_date.date}
    )

    (label
      :class "month"
      :text {v_date.month}
    )
  )
)

(defwidget Weather []
  (box
    :class "weather card"
    :orientation "h"
    :space-evenly true

    (box
      :halign "start"
      :valign "center"

      (label
        :class "icon"
        :text {v_weather.icon}
      )
    )

    (box
      :orientation "v"
      :space-evenly true
      :halign "end"

      (label
        :class "temp"
        :text "${v_weather.temp}°C "
        :xalign 1
      )

      (label
        :class "status"
        :text {v_weather.status}
        :xalign 1
      )
    )
  )
)

(defwidget Clock []
  (box
    :class "time card"
    :orientation "v"
    :space-evenly true

    (label
      :class "current"
      :text {v_date.time}
    )

    (label
      :class "day"
      :text {v_date.day}
    )
  )
)

(defwidget MusicPlayer [] (box
    :class "music-player card"
    :orientation "h"
    :space-evenly true
    :spacing 16

    (box
      :class "thumbnail"
      :style "background-image: url('${v_music.thumb}');"
    )

    (box
      :class "player"
      :orientation "v"
      :space-evenly true

      (overlay
        (box)
        (box
          :class "meta"
          :orientation "v"
          :space-evenly false
          :spacing 5

          (label
            :class "name"
            :text {v_music.title}
            :limit-width 10
            :show-truncated false
          )

          (label
            :class "album"
            :text {v_music.album}
            :limit-width 10
            :show-truncated true
          )

          (label
            :class "artist"
            :text {v_music.artist}
            :limit-width 10
            :show-truncated true
          )
        )
      )

      (box
        :class "controls"

        (centerbox
          :orientation "h"
          :valign "end"

          (eventbox :cursor "pointer" :halign "start"
            (button
              :onclick `~/.config/eww/sidebar/scripts/music.sh prev`
              :class "prev"

              (label
                :class "icon"
                :text "󰒮"
              )
            )
          )

          (eventbox :cursor "pointer" :halign "center"
            (button
              :onclick {v_music.status == "Stopped" ? "spotify &" : `~/.config/eww/sidebar/scripts/music.sh play`}
              :class "play"

              (label
                :class "icon"
                :text {v_music.status == "Playing" ? "󰏤" : ""}
              )
            )
          )

          (eventbox :cursor "pointer" :halign "end"
            (button
              :onclick `~/.config/eww/sidebar/scripts/music.sh next`
              :class "next"

              (label
                :class "icon"
                :text "󰒭"
              )
            )
          )
        )
      )
    )
  )
)

(defwidget DesktopContols []
  (box
    :class "desktop-controls card"
    :hexpand true

    (metric
      :class "cpu"
      :icon ""
      :min 0
      :max 100
      :value {EWW_CPU.avg}
      :tooltip "CPU USAGE: ${round(EWW_CPU.avg, 1)}%"
      :active false
    )

    (metric
      :class "cpu_temp"
      :icon ""
      :min 0
      :max 110
      :value {EWW_TEMPS.CORETEMP_PACKAGE_ID_0}
      :tooltip "CPU TEMP: ${EWW_TEMPS.CORETEMP_PACKAGE_ID_0}°C"
      :active false
    )

    (metric
      :class "ram"
      :icon ""
      :min 0
      :max 100
      :value {EWW_RAM.used_mem_perc}
      :tooltip "RAM USAGE: ${round(EWW_RAM.used_mem_perc, 1)}%"
      :active false
    )

    (metric
      :class "brightness"
      :icon "󰃠"
      :onchange "brightnessctl s {}%"
      :min 0
      :max 100
      :value v_brightness
      :tooltip "BRIGHTNESS: ${v_brightness}%"
      :active true
    )

    (metric
      :class "music"
      :icon {v_music.status == "Stopped" ? "󰝛" : "󰝚"}
      :onchange "~/.config/eww/sidebar/scripts/music.sh vol-set {}"
      :min 0
      :max 100
      :value {v_music.status == "Stopped" ? 100 : v_music.volume}
      :tooltip "MUSIC VOL: ${round(v_music.volume, 1)}%"
      :active true
    )

    (metric
      :class "volume"
      :icon "󰕾"
      :onchange "pamixer --set-volume {}"
      :min 0
      :max 100
      :value v_volume
      :tooltip "GLOBAL VOL: ${v_volume}%"
      :active true
    )
  )
)

(defwidget SystemControls []
  (box
    :class "system-controls card"
    :orientation "v"
    :space-evenly true

    (eventbox :cursor "pointer" :halign "center" :tooltip "Shutdown"
      (button
        :onclick `~/.config/eww/shared/scripts/openyesno.sh "cursor" "systemctl poweroff"`

        (label
          :class "icon shutdown"
          :text "󰐥"
        )
      )
    )

    (eventbox :cursor "pointer" :halign "center" :tooltip "Reboot"
      (button
        :onclick `~/.config/eww/shared/scripts/openyesno.sh "cursor" "systemctl reboot"`

        (label
          :class "icon reboot"
          :text ""
        )
      )
    )

    (eventbox :cursor "pointer" :halign "center" :tooltip "Suspend"
      (button
        :onclick `~/.config/eww/shared/scripts/openyesno.sh "cursor" "~/.config/eww/logout/scripts/suspend.sh"`

        (label
          :class "icon suspend"
          :text "󰤄"
        )
      )
    )

    (eventbox :cursor "pointer" :halign "center" :tooltip "Logout"
      (button
        :onclick `~/.config/eww/shared/scripts/openyesno.sh "cursor" "hyprctl dispatch exit 0"`

        (label
          :class "icon logout"
          :text "󰍃"
        )
      )
    )
  )
)

(defwidget metric [class min max value tooltip active icon ?onchange]
  (box
    :orientation "v"
    :space-evenly false
    :spacing 12

    (eventbox :cursor {active ? "pointer" : ""} :vexpand true
      (scale
        :class "${class} metric"
        :orientation "v"
        :min min
        :max max
        :value value
        :onchange onchange
        :tooltip tooltip
        :flipped true
        :active active
      )
    )

    (box
      :halign "center"

      (label
        :class "${class} icon"
        :text icon
        :halign "center"
        :xalign 0.5
      )
    )
  )
)
